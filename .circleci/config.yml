version: 2.1

jobs:
  build-and-test: 
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: creer virtual environment
          command: |
            python -m venv venv
      - run:
          name: upgrade pip
          command: | 
            source venv/bin/activate
            pip install --upgrade pip
      - run:
          name: install required packages
          command: |
            source venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: pytest
          command: |
            source venv/bin/activate
            pytest
      - run:
          name: flake8
          command: |
            source venv/bin/activate
            flake8

  conteneurisation:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: |
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run: docker build -t $IMAGE_NAME:$CIRCLE_SHA1 .
      - run: docker tag $IMAGE_NAME:$CIRCLE_SHA1 $DOCKERHUB_USERNAME/$IMAGE_NAME:$CIRCLE_SHA1
      - run: docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$CIRCLE_SHA1

  deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Build and push Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=$HEROKU_API_KEY heroku container:login
            HEROKU_API_KEY=$HEROKU_API_KEY heroku container:push -a $HEROKU_APP_NAME web
            HEROKU_API_KEY=$HEROKU_API_KEY heroku container:release -a $HEROKU_APP_NAME web

workflows:
    sample:
        jobs:
            - build-and-test
            -  conteneurisation:
                requires:
                    - build-and-test
                filters:
                  branches:
                    only:
                      - master
    
            - deploy:
                requires:
                - conteneurisation
                filters:
                  branches:
                      only: 
                        - master